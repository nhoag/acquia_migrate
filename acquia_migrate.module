<?php

/**
 * @file
 *   Acquia Migrate securely sends site to Acquia Cloud.
 */
use Acquia\Cloud\Api\CloudApiClient;

define("TMP_PATH", "/tmp/acquia_migrate");

/**
 * Implements hook_menu.
 */
function acquia_migrate_menu() {
  $items = array();
  $items['admin/config/system/acquia-migrate'] = array(
    'title' => 'Acquia Migrate settings',
    'description' => 'Migrate your site to Acquia Cloud.',
    'page callback' => 'acquia_migrate_settings_page',
    'file' => 'acquia_migrate.pages.inc',
    'access arguments' => array('administer site configuration'),
  );
  return $items;
}

/**
 * Implementation of hook_theme for bash script generation
 */
function acquia_migrate_theme() {
  return array(
    'code' => array(
      'template' => 'code',
      'variables' => array(),
    ),
    'files' => array(
      'template' => 'files',
      'variables' => array(),
    ),
    'database' => array(
      'template' => 'database',
      'variables' => array(
        'SSH_CMD' => NULL,
        'SRC_DB_USER' => NULL,
        'SRC_DB_PASS' => NULL,
        'SRC_DB_HOST' => NULL,
        'SRC_DB_NAME' => NULL,
        'SRC_EXPORT_DIR' => NULL,
        'IMPORT_TIMESTAMP' => NULL,
        'DST_IMPORT_DIR' => NULL,
        'ACQUIA_SITEGROUP' => NULL,
        'ACQUIA_HOSTNAME' => NULL,
        'DST_DB_NAME' => NULL,
        'DST_DB_HOST' => NULL,
        'DST_DB_USER' => NULL,
        'DST_DB_PASS' => NULL,
        'DST_DRUSH_URI' => NULL,
        ),
    ),
  );

}

function acquia_migrate_cloudapi_connect() {
  $migrate_user = variable_get('acquia_migrate_cloudapi_username', '');
  $migrate_password = variable_get('acquia_migrate_cloudapi_password', '');
  composer_manager_register_autoloader();

  $cloudapi = CloudApiClient::factory(array(
      'username' => $migrate_user,
      'password' => $migrate_password,
    ));
  return $cloudapi;
}

function acquia_migrate_databases($environment) {
  $cloudapi = acquia_migrate_cloudapi_connect();
  $sitedatabases = $cloudapi->siteDatabases($environment);
  $dbs = array();
  foreach($sitedatabases as $key => $value) {
    $dbs[$key] = $key; 
  }
  return $dbs;
}

function acquia_migrate_sshkey_exists($site) {
  $cloudapi = acquia_migrate_cloudapi_connect();
  $sshkeys = $cloudapi->sshKeys($site);
  foreach($sshkeys as $sshkey) {
    if ($sshkey['nickname'] === 'acquiamigration') {
      return true;
    }
  }
}