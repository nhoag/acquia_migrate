diff --git a/acquia_cloud/lib/CloudApiClient.php b/acquia_cloud/lib/CloudApiClient.php
index a570ac3..9ce6bcc 100644
--- a/acquia_cloud/lib/CloudApiClient.php
+++ b/acquia_cloud/lib/CloudApiClient.php
@@ -1,20 +1,43 @@
 <?php
 
-namespace Acquia\Cloud\Api;
-
-use Acquia\Common\AcquiaServiceManagerAware;
-use Acquia\Common\Json;
-use Guzzle\Common\Collection;
-use Guzzle\Service\Client;
-
-class CloudApiClient extends Client implements AcquiaServiceManagerAware
+/**
+ * @file An Acquia CloudApi Client compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/LICENSE.txt
+ */
+namespace AcquiaConnector\Cloud\Api;
+
+/**
+ * Acquia CloudApiClient object
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/CloudApiClient.php
+ */
+class CloudApiClient
 {
+    const BASE_URL = 'https://cloudapi.acquia.com';
     const BASE_PATH = '/v1';
 
+    protected $base_url;
+    protected $config;
+    protected $headers;
+
+
+    public function __construct($base_url, $config)
+    {
+        $this->base_url = $base_url;
+        $this->config = $config;
+    }
+
     /**
-     * {@inheritdoc}
+     * Factory method to create a new CloudApiClient connection.
+     *
+     * @param array $config Login credentials
+     *
+     * @return \AcquiaConnector\Cloud\Api\CloudApiClient
      *
-     * @return \Acquia\Cloud\Api\CloudApiClient
+     * @throws \RuntimeException
      */
     public static function factory($config = array())
     {
@@ -25,24 +48,32 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
         );
 
         $defaults = array(
-            'base_url' => 'https://cloudapi.acquia.com',
+            'base_url' => self::BASE_URL,
             'base_path' => self::BASE_PATH,
         );
 
-        // Instantiate the Acquia Search plugin.
-        $config = Collection::fromConfig($config, $defaults, $required);
-        $client = new static($config->get('base_url'), $config);
+        $config = array_merge($defaults, $config);
+        foreach($required as $required_key) {
+          if (!isset($required_key) || empty($required_key)) {
+              throw new \RuntimeException("Missing required configuration parameter '{$required_key}'.");
+          }
+        }
+        $client = new static($config['base_url'], $config);
+        $curl_version = curl_version();
         $client->setDefaultHeaders(array(
             'Content-Type' => 'application/json; charset=utf-8',
+            'User-Agent' => 'acquia_migrate/0.1 (jonathan.webb@acquia.com)'
+            . ' curl/' . $curl_version['version']
+            . ' PHP/' . PHP_VERSION
         ));
 
-        // Attach the Acquia Search plugin to the client.
-        $plugin = new CloudApiAuthPlugin($config->get('username'), $config->get('password'));
-        $client->addSubscriber($plugin);
-
         return $client;
     }
 
+    public function setDefaultHeaders($default_headers) {
+        $this->headers = $default_headers;
+    }
+
     /**
      * {@inheritdoc}
      */
@@ -56,6 +87,109 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
     }
 
     /**
+     * Helper function that makes the curl calls (GET).
+     * @throws \RuntimeException
+     */
+    protected function get($params)
+    {
+        $vars = $this->config;
+
+        if (is_array($params[1])) {
+            $vars = array_merge($vars, $params[1]);
+        }
+
+        $url = "{$this->base_url}{$params[0]}";
+        while(preg_match('/([{]\+?(\w+)[}])/', $url, $matches)) {
+            if (isset($vars[$matches[2]])) {
+                $url = str_replace($matches[1], $vars[$matches[2]], $url);
+            }
+            else {
+                throw new \RuntimeException("Missing variable '{$matches[2]}' in API 'get' request.");
+            }
+        }
+        $username = $this->config['username'];
+        $password = $this->config['password'];
+        $return_value = FALSE;
+        if ($ch = curl_init($url)) {
+            $headers = array();
+            foreach($this->headers as $header => $value) {
+                $headers[] = "{$header}: {$value}";
+            }
+            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
+            curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
+            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 150);
+            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
+            curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
+            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);
+            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
+
+            if (!$server_output = curl_exec($ch)) {
+                throw new \RuntimeException(curl_error($ch) . " [Requesting the URL '{$url}' with user '{$username}'']");
+            }
+            curl_close($ch);
+
+            $return_value = drupal_json_decode($server_output);
+        }
+        else {
+            throw new \RuntimeException("Curl init failed in API 'get' request.");
+        }
+        return $return_value;
+    }
+
+    /**
+     * Helper function that makes the curl calls (POST).
+     * @throws \RuntimeException
+     */
+    protected function post($params, $unused, $body)
+    {
+        $vars = $this->config;
+
+        if (is_array($params[1])) {
+            $vars = array_merge($vars, $params[1]);
+        }
+
+        $url = "{$this->base_url}{$params[0]}";
+        while(preg_match('/([{]\+?(\w+)[}])/', $url, $matches)) {
+            if (isset($vars[$matches[2]])) {
+                $url = str_replace($matches[1], $vars[$matches[2]], $url);
+            }
+            else {
+                throw new \RuntimeException("Missing variable '{$matches[2]}' in API 'post' request.");
+            }
+        }
+        $username = $this->config['username'];
+        $password = $this->config['password'];
+        $return_value = FALSE;
+        if ($ch = curl_init($url)) {
+            $headers = array();
+            foreach($this->headers as $header => $value) {
+                $headers[] = "{$header}: {$value}";
+            }
+            curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
+            curl_setopt($ch, CURLOPT_USERPWD, "$username:$password");
+            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 150);
+            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
+            curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
+            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 1);
+            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 2);
+
+            curl_setopt($ch, CURLOPT_POST, 0);
+            curl_setopt($ch, CURLOPT_POSTFIELDS, $body);
+
+            if (!$server_output = curl_exec($ch)) {
+                throw new \RuntimeException(curl_error($ch) . " [Posting to the URL '{$url}' with user '{$username}'']");
+            }
+            curl_close($ch);
+
+            $return_value = drupal_json_decode($server_output);
+        }
+        else {
+            throw new \RuntimeException("Curl init failed in API 'post' request.");
+        }
+        return $return_value;
+    }
+
+    /**
      * Helper method to send a GET request and return parsed JSON.
      *
      * @param string $path
@@ -64,13 +198,11 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
-     *
-     * @see http://docs.guzzlephp.org/en/latest/http-client/uri-templates.html
+     * @throws \RuntimeException
      */
     public function sendGet($path, $variables = array())
     {
-        return $this->get(array($path, $variables))->send()->json();
+        return $this->get(array($path, $variables));
     }
 
     /**
@@ -84,9 +216,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
-     *
-     * @see http://docs.guzzlephp.org/en/latest/http-client/uri-templates.html
+     * @throws \RuntimeException
      */
     public function saveGet($path, array $variables, $tofile)
     {
@@ -108,16 +238,14 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
-     *
-     * @see http://docs.guzzlephp.org/en/latest/http-client/uri-templates.html
+     * @throws \RuntimeException
      */
     public function sendPost($path, $variables = array(), $body = null)
     {
         if (!is_string($body)) {
-            $body = Json::encode($body);
+            $body = drupal_json_encode($body);
         }
-        return $this->post(array($path, $variables), null, $body)->send()->json();
+        return $this->post(array($path, $variables), null, $body);
     }
 
     /**
@@ -129,9 +257,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
-     *
-     * @see http://docs.guzzlephp.org/en/latest/http-client/uri-templates.html
+     * @throws \RuntimeException
      */
     public function sendDelete($path, $variables = array())
     {
@@ -139,9 +265,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
     }
 
     /**
-     * @return \Acquia\Cloud\Api\Response\Sites
+     * @return \AcquiaConnector\Cloud\Api\Response\Sites
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function sites()
     {
@@ -152,9 +278,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
     /**
      * @param string $site
      *
-     * @return \Acquia\Cloud\Api\Response\Site
+     * @return \AcquiaConnector\Cloud\Api\Response\Site
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function site($site)
     {
@@ -166,9 +292,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
     /**
      * @param string $site
      *
-     * @return \Acquia\Cloud\Api\Response\Environments
+     * @return \AcquiaConnector\Cloud\Api\Response\Environments
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function environments($site)
     {
@@ -181,9 +307,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      * @param string $site
      * @param string $env
      *
-     * @return \Acquia\Cloud\Api\Response\Environment
+     * @return \AcquiaConnector\Cloud\Api\Response\Environment
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function environment($site, $env)
     {
@@ -202,7 +328,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function installDistro($site, $env, $type)
     {
@@ -218,9 +344,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      * @param string $site
      * @param string $env
      *
-     * @return \Acquia\Cloud\Api\Response\Servers
+     * @return \AcquiaConnector\Cloud\Api\Response\Servers
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function servers($site, $env)
     {
@@ -237,9 +363,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      * @param string $env
      * @param string $server
      *
-     * @return \Acquia\Cloud\Api\Response\Server
+     * @return \AcquiaConnector\Cloud\Api\Response\Server
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function server($site, $env, $server)
     {
@@ -259,7 +385,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function maxPhpProcs($site, $env, $server)
     {
@@ -276,7 +402,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function sshKeys($site)
     {
@@ -290,7 +416,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function sshKey($site, $id)
     {
@@ -308,7 +434,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function addSshKey($site, $publicKey, $nickname)
     {
@@ -327,7 +453,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function deleteSshKey($site, $id)
     {
@@ -343,7 +469,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function svnUsers($site)
     {
@@ -356,7 +482,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function svnUser($site, $id)
     {
@@ -374,7 +500,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      *
      * @todo Testing returned a 400 response.
      */
@@ -394,7 +520,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      *
      * @todo Testing returned a 400 response.
      */
@@ -410,9 +536,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
     /**
      * @param string $site
      *
-     * @return \Acquia\Cloud\Api\Response\Databases
+     * @return \AcquiaConnector\Cloud\Api\Response\Databases
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function siteDatabases($site)
     {
@@ -425,9 +551,9 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      * @param string $site
      * @param string $db
      *
-     * @return \Acquia\Cloud\Api\Response\Database
+     * @return \AcquiaConnector\Cloud\Api\Response\Database
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function siteDatabase($site, $db)
     {
@@ -445,7 +571,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function environmentDatabases($site, $env)
     {
@@ -463,7 +589,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function environmentDatabase($site, $env, $db)
     {
@@ -482,7 +608,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function databaseBackups($site, $env, $db)
     {
@@ -502,7 +628,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function databaseBackup($site, $env, $db, $id)
     {
@@ -523,7 +649,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function downloadDatabaseBackup($site, $env, $db, $id, $outfile)
     {
@@ -543,7 +669,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function createDatabaseBackup($site, $env, $db)
     {
@@ -561,7 +687,7 @@ class CloudApiClient extends Client implements AcquiaServiceManagerAware
      *
      * @return array
      *
-     * @throws \Guzzle\Http\Exception\ClientErrorResponseException
+     * @throws \RuntimeException
      */
     public function taskInfo($site, $task)
     {
diff --git a/acquia_cloud/lib/Response/Database.php b/acquia_cloud/lib/Response/Database.php
index a13b986..b599a55 100644
--- a/acquia_cloud/lib/Response/Database.php
+++ b/acquia_cloud/lib/Response/Database.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Database response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Database.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Database extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Databases.php b/acquia_cloud/lib/Response/Databases.php
index 183a1b5..3a4c8df 100644
--- a/acquia_cloud/lib/Response/Databases.php
+++ b/acquia_cloud/lib/Response/Databases.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Databases response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Databases.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Databases extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Environment.php b/acquia_cloud/lib/Response/Environment.php
index 89b10e4..aaacc40 100644
--- a/acquia_cloud/lib/Response/Environment.php
+++ b/acquia_cloud/lib/Response/Environment.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Environment response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Environment.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Environment extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Environments.php b/acquia_cloud/lib/Response/Environments.php
index 683ada3..55bc072 100644
--- a/acquia_cloud/lib/Response/Environments.php
+++ b/acquia_cloud/lib/Response/Environments.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Environments response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Environments.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Environments extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Server.php b/acquia_cloud/lib/Response/Server.php
index 938bd8c..f056ebf 100644
--- a/acquia_cloud/lib/Response/Server.php
+++ b/acquia_cloud/lib/Response/Server.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Server response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Server.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Server extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Servers.php b/acquia_cloud/lib/Response/Servers.php
index fab6642..b18a5a6 100644
--- a/acquia_cloud/lib/Response/Servers.php
+++ b/acquia_cloud/lib/Response/Servers.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Servers response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Servers.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Servers extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Site.php b/acquia_cloud/lib/Response/Site.php
index 1bfea56..7da7c51 100644
--- a/acquia_cloud/lib/Response/Site.php
+++ b/acquia_cloud/lib/Response/Site.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Site response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Site.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Site extends \ArrayObject
 {
diff --git a/acquia_cloud/lib/Response/Sites.php b/acquia_cloud/lib/Response/Sites.php
index ed64e50..8581963 100644
--- a/acquia_cloud/lib/Response/Sites.php
+++ b/acquia_cloud/lib/Response/Sites.php
@@ -1,6 +1,15 @@
 <?php
 
-namespace Acquia\Cloud\Api\Response;
+/**
+ * @file
+ * Acquia CloudApi Sites response compatible with cpliakas/acquia-sdk-php
+ *
+ * NOTICE: This source code was derived from acquia-sdk-php, covered by
+ * the GPLv3 software license, on 2 Dec 2013 (0bd839a179).
+ *
+ * @see https://github.com/cpliakas/acquia-sdk-php/blob/0bd839a179/src/Acquia/Cloud/Api/Response/Sites.php
+ */
+namespace AcquiaConnector\Cloud\Api\Response;
 
 class Sites extends \ArrayObject
 {
